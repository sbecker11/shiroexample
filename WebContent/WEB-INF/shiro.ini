[main] 

# ------------------------  
# Database  
  
# Own Realm  
jdbcRealm = com.jjoe64.shiroexample.auth.MyCustomRealm
  
# Sha256  
sha256Matcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
# base64 encoding, not hex in this example:  
sha256Matcher.storedCredentialsHexEncoded = false  
sha256Matcher.hashIterations = 1024  
  
jdbcRealm.credentialsMatcher = $sha256Matcher  
  
# User Query  
# default is "select password from users where username = ?"  
jdbcRealm.authenticationQuery = SELECT password, salt FROM User WHERE email = ?
  
# permissions  
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.userRolesQuery = select roleName from UserRole where email = ?
jdbcRealm.permissionsQuery = select permission from RolesPermission where roleName = ?
securityManager.realms = $jdbcRealm

# Connection   
ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
#ds.password = PASSWORD
ds.password = sm00th
ds.databaseName = shiroexample
jdbcRealm.dataSource=$ds

# Use Built-in Cache Manager
builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $builtInCacheManager

authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
#authc.failureKeyAttribute = shiroLoginFailure
#authc.username = username
#authc.password = password
authc.loginUrl = /login
authc.successUrl  = /hello
logout.redirectUrl = /hello

# -----------------------------------------------------------------------------  
[urls]  
/hello = authc
/admin.jsp = authc, perms["admin:access"]
/user.jsp = authc
